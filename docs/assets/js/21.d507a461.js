(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{179:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"coroutines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#coroutines","aria-hidden":"true"}},[t._v("#")]),t._v(" Coroutines")]),t._v(" "),s("p",[t._v("Библиотека для работы с потоками в Kotlin")]),t._v(" "),s("h3",{attrs:{id:"dependencies-and-import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dependencies-and-import","aria-hidden":"true"}},[t._v("#")]),t._v(" Dependencies and Import")]),t._v(" "),s("div",{staticClass:"language-groovy extra-class"},[s("pre",{pre:!0,attrs:{class:"language-groovy"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// app/build.gradle")]),t._v("\ndependencies "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n    implementation "),s("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1"')]),t._v("\n")])])]),s("div",{staticClass:"language-Kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlinx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coroutines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n")])])]),s("h3",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("p",[t._v("Блокирующий поток")]),t._v(" "),s("div",{staticClass:"language-Kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("runBlocking "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// блокирует главный UI поток")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someHardWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("Запустить в UI thread")]),t._v(" "),s("div",{staticClass:"language-Kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Запустить в главном потоке UI")]),t._v("\nGlobalScope"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("launch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dispatchers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// не блокирует главный поток, а просто простаивает, и идет дальше")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someHardWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Всего диспетчеров 4:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Dispatchers.Main")]),t._v(" - Диспетчер, ограниченный главным потоком, работающим с объектами пользовательского интерфейса. Этот диспетчер может быть использован либо напрямую, либо через фабрику MainScope. Обычно такой диспетчер является однопоточным.")]),t._v(" "),s("li",[s("strong",[t._v("Dispatchers.Unconfined")]),t._v(" - Диспетчер, который не ограничен каким-либо конкретным потоком. Он выполняет начальное продолжение сопрограммы непосредственно в текущем кадре вызова и позволяет сопрограмме возобновить работу в любом потоке, который используется соответствующей функцией приостановки, без указания какой-либо конкретной политики потоков. Примечание: используйте с особой осторожностью, не для общего кода.")]),t._v(" "),s("li",[s("strong",[t._v("Dispatchers.IO")]),t._v(" - "),s("code",[t._v("CoroutineDispatcher")]),t._v(", предназначенный для разгрузки блокирующих задач ввода-вывода в общий пул потоков.")]),t._v(" "),s("li",[s("strong",[t._v("Dispatchers.Default")]),t._v(" - "),s("code",[t._v("CoroutineDispatcher")]),t._v(" по умолчанию, который используется всеми стандартными сборщиками, такими как "),s("code",[t._v("launch")]),t._v(", "),s("code",[t._v("async")]),t._v(" и т.д. Если в их контексте не указан ни диспетчер, ни какой-либо другой "),s("code",[t._v("ContinuationInterceptor")]),t._v(".")])]),t._v(" "),s("p",[s("code",[t._v("Async")])]),t._v(" "),s("div",{staticClass:"language-Kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("GlobalScope"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("launch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dispatchers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  async "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initAbonsSpinner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);