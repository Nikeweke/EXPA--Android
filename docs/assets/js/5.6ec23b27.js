(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{193:function(t,n,a){"use strict";a.r(n);var s=a(0),o=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"android-ndk-c-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android-ndk-c-c","aria-hidden":"true"}},[t._v("#")]),t._v(" Android NDK (C/C++)")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#intro"}},[t._v("Intro")])]),a("li",[a("a",{attrs:{href:"#зачем-писать-на-c-есnи-есть-kotlin"}},[t._v("Зачем писать на C++, если есть Kotlin?")])]),a("li",[a("a",{attrs:{href:"#installation"}},[t._v("Installation")])]),a("li",[a("a",{attrs:{href:"#добавnение-c-поддержки-к-новому-проекту"}},[t._v("Добавление C++ поддержки к новому проекту")])]),a("li",[a("a",{attrs:{href:"#добавnение-c-поддержки-к-существуещему-проекту"}},[t._v("Добавление C++ поддержки к существуещему проекту")])]),a("li",[a("a",{attrs:{href:"#пример-вызова-с-шных-функций"}},[t._v("Пример вызова С-шных функций")])]),a("li",[a("a",{attrs:{href:"#keep-function-more-secure"}},[t._v("Keep function more secure")])])])]),a("p"),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"intro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intro","aria-hidden":"true"}},[t._v("#")]),t._v(" Intro")]),t._v(" "),a("p",[a("strong",[t._v("Android NDK")]),t._v(" - это "),a("code",[t._v("native dev kit")]),t._v(" с помощью которого можно писать код на C/C++ который будет потом использоваться в приложении, можно вызывать код из Kotlin в C++, и наоборот.")]),t._v(" "),a("h3",{attrs:{id:"зачем-писать-на-c-есnи-есть-kotlin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#зачем-писать-на-c-есnи-есть-kotlin","aria-hidden":"true"}},[t._v("#")]),t._v(" Зачем писать на C++, если есть Kotlin?")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Защита информации при декомпиляции приложения")]),t._v(". Если вы пишете на С++, то информацию не могут достать так просто, если бы это был код на Java/Kotlin.")]),t._v(" "),a("li",[t._v("Повысить производительность (сортировка больших данных, сложные алгоритмы, ресурсоемкие задачи)")]),t._v(" "),a("li",[t._v("Использовать возможности существующих библиотек, написанных на C / C ++ или вашего собственного нативного кода, который вы хотите использовать повторно")]),t._v(" "),a("li",[t._v("Создавать кросс-платформенные решения (Android и iOS)")]),t._v(" "),a("li",[t._v("Использовать прямое низкоуровневое программирование (т. е. аппаратное обеспечение)")])]),t._v(" "),a("h3",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("Нужно зайти в "),a("code",[t._v("Android SDK Tools")]),t._v(" и выбрать для установки там "),a("strong",[t._v("NDK")]),t._v(" и "),a("strong",[t._v("CMake")]),t._v("(сборщик С/C++ кода).")]),t._v(" "),a("h3",{attrs:{id:"добавnение-c-поддержки-к-новому-проекту"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#добавnение-c-поддержки-к-новому-проекту","aria-hidden":"true"}},[t._v("#")]),t._v(" Добавление C++ поддержки к новому проекту")]),t._v(" "),a("p",[t._v("Процесс создания нового проекта с поддержкой нативного кода аналогичен созданию стандартного проекта Android, за исключением нескольких дополнительных шагов:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("В разделе Настройка нового проекта мастера установите флажок "),a("strong",[t._v("Include C++ Support")]),t._v(' checkbox. Нажмите кнопку "Далее.')])]),t._v(" "),a("li",[a("p",[t._v("Заполните все остальные поля и следующие несколько разделов мастера как обычно.")])]),t._v(" "),a("li",[a("p",[t._v("При появлении запроса выберите "),a("strong",[t._v("Empty Activity")])])]),t._v(" "),a("li",[a("p",[t._v("В разделе «Customize C++ Support» вы можете настроить свой проект с помощью следующих параметров:")])])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Standart C++")]),t._v(": используйте раскрывающийся список, чтобы выбрать, какую стандартизацию C ++ вы хотите использовать. При выборе Toolchain Default используется настройка CMake по умолчанию. Два других варианта - это C ++ 11 и C ++ 14.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Exceptions Support")]),t._v(". Если эта опция включена, Android Studio добавляет флаг -fexceptions в cppFlags в файле build.gradle уровня модуля, который Gradle передает CMake. Значением по умолчанию является -fno-exception. Это может использоваться для обеспечения совместимости с версиями NDK, более ранними, чем NDKr5, которые не имели поддержки обработки исключений. Чтобы узнать об этом более подробно, перейдите по ссылке: https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_exceptions.html.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Runtime Type Information Support")]),t._v(": с помощью этой опции вы сможете использовать функции отражения кода в коде C ++ во время выполнения. Установите этот флажок, если вы хотите поддержку RTTI. Если эта функция включена, Android Studio добавляет флаг -frtti в cppFlags в файле build.gradle уровня модуля, который Gradle передает в CMake.")])])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("Нажмите Готово.")])]),t._v(" "),a("h3",{attrs:{id:"добавnение-c-поддержки-к-существуещему-проекту"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#добавnение-c-поддержки-к-существуещему-проекту","aria-hidden":"true"}},[t._v("#")]),t._v(" Добавление C++ поддержки к существуещему проекту")]),t._v(" "),a("p",[t._v("Можно создать новый проект с таким же именем, а потом смержить проекты. Вариант рискованный, но рабочий.")]),t._v(" "),a("h3",{attrs:{id:"пример-вызова-с-шных-функций"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#пример-вызова-с-шных-функций","aria-hidden":"true"}},[t._v("#")]),t._v(" Пример вызова С-шных функций")]),t._v(" "),a("p",[t._v("Весь код C/C++ храниться в папке "),a("strong",[t._v("src/main/cpp")])]),t._v(" "),a("div",{staticClass:"language-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// src/main/cpp/native-lib.cpp")]),t._v("\n\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("<jni.h>")])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("<string>")])]),t._v("\n\nusing namespace std"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/*\n   Метод начинаеться с слова Java - все остальное это путь к пакету где будет вызвана эта функция, пример названия ф-ции:\n\n   пакет в kotlin - com.myapp\n   название функции в с++ - Java_com_myapp_[название класса]_[название функции](){...}\n\n   Объязательные параметры функции:\n     + JNIEnv* env – указатель на интерфейс;\n     + jobject     – ссылка на объект в котором описан нативный метод (this)\n\n   Подробней здесь:\n   https://proandroiddev.com/android-ndk-interaction-of-kotlin-and-c-c-5e19e35bac74\n*/")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v('/* ========================================>\n    Описание функции:\n      + JNIEXPORT - обозначает видимость этой функции (нужно юзать если cppFlags "-fvisibility=hidden") [default/hidden]\n      + JNICALL - для корректной работы сборки\n      + Возвращает String (jstring)\n      + Будет вызвана в пакете: com.gymupadmin.UI.MainActivity\n      + Название функции: stringFromJNI\n    ======================================== */')]),t._v("\n    JNIEXPORT jstring JNICALL\n    "),a("span",{attrs:{class:"token function"}},[t._v("Java_com_myapp_MainActivity_getSomeString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JNIEnv"),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" env"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jobject"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        string hello "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Hello from C++"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" env"),a("span",{attrs:{class:"token operator"}},[t._v("->")]),a("span",{attrs:{class:"token function"}},[t._v("NewStringUTF")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("c_str")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    JNIEXPORT jint JNICALL\n    "),a("span",{attrs:{class:"token function"}},[t._v("Java_com_myapp_MainActivity_addNumbers")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JNIEnv"),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" env"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jobject"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jint a"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jint b"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-Kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myapp\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MainActivity "),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("AppCompatActivity")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v('// Подключаем нашу библиотеку "native-lib.cpp"')]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// их можно создать еще")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("init")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("loadLibrary")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"native-lib"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n     *  Обозначаем внешние функции из C/C++ \n     */")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getSomeString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("addNumbers")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n    *  onCreate()\n    */")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("onCreate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("savedInstanceState"),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Bundle"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("onCreate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("savedInstanceState"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token function"}},[t._v("setContentView")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layout"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("activity_main"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" someString "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getSomeString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n      "),a("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" result     "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("addNumbers")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      Toast"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("makeText")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n          "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token interpolation variable"}},[t._v("$result")]),t._v(" - "),a("span",{attrs:{class:"token interpolation variable"}},[t._v("$someString")]),t._v('"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n          Toast"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LENGTH_LONG\n       "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("show")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"keep-function-more-secure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-function-more-secure","aria-hidden":"true"}},[t._v("#")]),t._v(" Keep function more secure")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// app/build.gradle")]),t._v("\nandroid "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    externalNativeBuild "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cmake "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token comment"}},[t._v("// keep your code secure")]),t._v("\n            "),a("span",{attrs:{class:"token comment"}},[t._v("// https://stackoverflow.com/questions/19422660/when-to-use-jniexport-and-jnicall-in-android-ndk")]),t._v("\n            cppFlags "),a("span",{attrs:{class:"token string gstring"}},[t._v('"-fvisibility=hidden"')]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// add this flag")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],!1,null,null,null);o.options.__file="android-ndk.md";n.default=o.exports}}]);