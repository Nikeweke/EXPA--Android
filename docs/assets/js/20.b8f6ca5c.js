(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{193:function(r,a,t){"use strict";t.r(a);var e=t(0),s=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var r=this,a=r.$createElement,t=r._self._c||a;return t("div",{staticClass:"content"},[t("h3",{attrs:{id:"concurrency"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#concurrency","aria-hidden":"true"}},[r._v("#")]),r._v(" Concurrency")]),r._v(" "),t("p",[r._v("http://www.vogella.com/tutorials/JavaConcurrency/article.html")]),r._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#concurrency"}},[r._v("Concurrency")])]),t("li",[t("a",{attrs:{href:"#what-is-concurrency"}},[r._v("What is Concurrency?")])]),t("li",[t("a",{attrs:{href:"#process-vs-threads"}},[r._v("Process vs Threads")])]),t("li",[t("a",{attrs:{href:"#пробnемы-параnnеnизма"}},[r._v("Проблемы параллелизма")])])])]),t("p"),r._v(" "),t("hr"),r._v(" "),t("h3",{attrs:{id:"what-is-concurrency"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-concurrency","aria-hidden":"true"}},[r._v("#")]),r._v(" What is Concurrency?")]),r._v(" "),t("p",[r._v("Параллелизм - это возможность одновременного запуска нескольких программ или нескольких частей программы. Если трудоемкая задача может выполняться асинхронно или параллельно, это повышает пропускную способность и интерактивность программы.\nСовременный компьютер имеет несколько процессоров или несколько ядер в одном процессоре. Возможность использования этих многоядерных процессоров может стать ключом к успешному применению большого объема.")]),r._v(" "),t("h3",{attrs:{id:"process-vs-threads"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-vs-threads","aria-hidden":"true"}},[r._v("#")]),r._v(" Process vs Threads")]),r._v(" "),t("p",[r._v("Процесс выполняется независимо и изолирован от других процессов. Он не может напрямую обращаться к общим данным в других процессах. Ресурсы процесса, например. памяти и процессорного времени, выделяются ему через операционную систему.")]),r._v(" "),t("p",[r._v("Thread - это так называемый легкий процесс. Он имеет свой собственный стек вызовов, но может обращаться к общим данным других потоков в одном и том же процессе. Каждый поток имеет свой собственный кеш памяти. Если поток читает общие данные, он сохраняет эти данные в своем собственном кеше памяти. Поток может перечитывать общие данные.")]),r._v(" "),t("p",[r._v("Приложение Java запускается по умолчанию в одном процессе. В приложении Java вы работаете с несколькими потоками для обеспечения параллельной обработки или асинхронного поведения.")]),r._v(" "),t("h3",{attrs:{id:"пробnемы-параnnеnизма"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#пробnемы-параnnеnизма","aria-hidden":"true"}},[r._v("#")]),r._v(" Проблемы параллелизма")]),r._v(" "),t("p",[r._v("Threads имеют собственный стек вызовов, но также могут обращаться к общим данным. Поэтому у вас есть две основные проблемы, проблемы с видимостью и доступом.")]),r._v(" "),t("p",[r._v("Проблема видимости возникает, если поток "),t("code",[r._v("A")]),r._v(" читает общие данные, которые позже изменяются потоком "),t("code",[r._v("B")]),r._v(", а поток "),t("code",[r._v("A")]),r._v(" не знает об этом изменении.")]),r._v(" "),t("p",[r._v("Проблема доступа может возникнуть, если несколько потоков доступа и одновременно изменить одни и те же общие данные.\nПроблема видимости и доступа может привести к:")]),r._v(" "),t("ul",[t("li",[r._v("Сбой в работе: программа больше не реагирует из-за проблем с одновременным доступом к данным, например - тупики.")]),r._v(" "),t("li",[r._v("Сбой безопасности: программа создает неверные данные.")])])])}],!1,null,null,null);s.options.__file="concurrency.md";a.default=s.exports}}]);