(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{177:function(t,a,n){"use strict";n.r(a);var s=n(0),o=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"fragment-transactions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fragment-transactions","aria-hidden":"true"}},[t._v("#")]),t._v(" Fragment Transactions")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#intro"}},[t._v("Intro")])]),n("li",[n("a",{attrs:{href:"#основные-действия"}},[t._v("Основные действия")])]),n("li",[n("a",{attrs:{href:"#simple-transaction"}},[t._v("Simple transaction")])]),n("li",[n("a",{attrs:{href:"#transaction-with-standart-animation"}},[t._v("Transaction with standart Animation")])]),n("li",[n("a",{attrs:{href:"#transaction-with-custom-animation"}},[t._v("Transaction with custom Animation")])]),n("li",[n("a",{attrs:{href:"#работа-с-addtobackstack"}},[t._v("Работа с addToBackStack()")])])])]),n("p"),t._v(" "),n("hr"),t._v(" "),n("h3",{attrs:{id:"intro"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intro","aria-hidden":"true"}},[t._v("#")]),t._v(" Intro")]),t._v(" "),n("p",[n("strong",[t._v("Fragment Transactions")]),t._v(" - нужны для смены фрагментов в "),n("code",[t._v("FrameLayout(FrameContainer)")]),t._v(". В основном делаеться одна активность и в неё вставляеться "),n("code",[t._v("FrameContainer")]),t._v(" в которой меняються фрагменты.")]),t._v(" "),n("h3",{attrs:{id:"основные-действия"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#основные-действия","aria-hidden":"true"}},[t._v("#")]),t._v(" Основные действия")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("transaction.add(int containerViewId, Fragment fragment, String tag)")]),t._v(" - добавление фрагмента в состояние Activity с идентификатором контейнера, в который должен быть помещен этот фрагмент, и добавляемого фрагмента.")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.attach(Fragment)")]),t._v(" - повторно присоединить указанный фрагмент из пользовательского интерфейса после того, как он был ранее отсоединен (с вызовом detach).")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.detach(Fragment)")]),t._v(" - отсоединить данный фрагмент от пользовательского интерфейса (фрагмент удален из пользовательского интерфейса, однако FragmentManager все еще активно управляет его состоянием).")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.hide(Fragment)")]),t._v(" - скрывает существующий фрагмент. Относится только к фрагментам, чьи представления были добавлены в контейнер. Заставляет взгляды быть скрытыми.")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.remove(Fragment)")]),t._v(" - удалить существующий фрагмент.")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.replace(int containerViewId, Fragment fragment, String tag)")]),t._v(" - (равнозначно "),n("code",[t._v("remove().add()")]),t._v(")- заменить существующий фрагмент, который был добавлен в контейнер. По сути, это то же самое, что вызов метода remove (фрагмента) для всех добавленных в данный момент фрагментов, которые были добавлены с тем же containerViewId, а затем добавлены (containerViewId, Fragment).")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.show(Fragment)")]),t._v(" - показывает ранее скрытый фрагмент.")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.setCustomAnimations(int enter, int exit, int popEnter, int popExit)")]),t._v(" - поставить кастомную анимацию. ("),n("code",[t._v("enter")]),t._v(" & "),n("code",[t._v("exit")]),t._v(" - параметры для фрагментов которые сейчас будут отрабатывать, "),n("code",[t._v("pop-")]),t._v(" это когда делаюь комманду "),n("code",[t._v("popBackStack")]),t._v(")")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.setTransition(...)")]),t._v(" - поставить стандартную анимацию")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.commit()")]),t._v(" - подтвердить транзакцию (асинхронно). По-этому не стоит удивляеться когда вы делаете эту команду, а состояние(isHidden) фрагмента не меняеться.")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.commitNow()")]),t._v(" - подтвердить транзакцию (синхронно)")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transaction.addToBackStack([String/null])")]),t._v(" - передавать название не объязательно, можно и "),n("code",[t._v("null")]),t._v(", записывает состояние в стек, к которому можно потому вернуться с помощью комманды "),n("strong",[t._v("popBackStack()")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("fragmentManager.popBackStack()")]),t._v(" - вернуться к предыдущему состояния стека, то есть вернуться к пред. фрагменту.")])])]),t._v(" "),n("h3",{attrs:{id:"simple-transaction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#simple-transaction","aria-hidden":"true"}},[t._v("#")]),t._v(" Simple transaction")]),t._v(" "),n("div",{staticClass:"language-Kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" transaction "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" supportFragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("beginTransaction")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// [OLD OPTION]: val transaction = fragmentManager.beginTransaction()")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UpdateFragmentInstance "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("UpdateFragment")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HomeFragmentInstance   "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("HomeFragment")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StartFragmentInstance  "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("StartFragment")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Добавляем в контейнер фрагменты. ")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Вы увидите только последний фрагмент, так как он накрыл все остальные")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// R.id.frameContainer - это элемент FrameLayout, в него и вставляються фрагменты")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("add")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frameContainer"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UpdateFragmentInstance"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("add")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frameContainer"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HomeFragmentInstance"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("add")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frameContainer"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StartFragmentInstance"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Подтверждаем изменения ")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("commit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"transaction-with-standart-animation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#transaction-with-standart-animation","aria-hidden":"true"}},[t._v("#")]),t._v(" Transaction with standart Animation")]),t._v(" "),n("div",{staticClass:"language-Kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" transaction "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" supportFragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("beginTransaction")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Option 1")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("setTransition")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TRANSIT_FRAGMENT_CLOSE"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Option 2")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("setTransition")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TRANSIT_FRAGMENT_OPEN"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Option 3")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("setTransition")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TRANSIT_FRAGMENT_FADE"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// если что, примениться только последняя")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// some actions here...")]),t._v("\n\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("commit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"transaction-with-custom-animation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#transaction-with-custom-animation","aria-hidden":"true"}},[t._v("#")]),t._v(" Transaction with custom Animation")]),t._v(" "),n("p",[t._v("Кастомная анимации делаеться с помощью "),n("code",[t._v(".xml")]),t._v(" разметки, можно и программно, но так удобней. Храниться анимация в "),n("strong",[t._v("res/anim")]),t._v(". НЕ используйте теги в анимации типа: "),n("code",[t._v("<Alpha></Alpha>")]),t._v(", "),n("code",[t._v("<Translate></Translate>")]),t._v(" и т.д. это все тормозная штука, лучше использовать "),n("strong",[t._v("ObjectAnimator")]),t._v(" везде - как в "),n("code",[t._v("xml")]),t._v(", так и в коде.")]),t._v(" "),n("div",{staticClass:"language-Kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// Забираем менеджера по фрагментам")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" transaction "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("beginTransaction")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Забираем id анимации")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animEnter "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fade_out_reverse\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animExit  "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fade_in_reverse\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Ставим анимацию для захода нового")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// и ухода текущего фрагмента ")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("setCustomAnimations")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animEnter"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animExit"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Даем новый фрагмент которым хотим заменить, и его тег, чтобы можно было его найти в контейнере")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replace")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frameContainer"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newFragment"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fragmentTag"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// Подтверждаем")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("commit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("Длительность анимации нового и старого фрагмента")]),t._v(" "),n("p",[t._v("Должна быть одинакова, а то одна отработает быстрее другой, и будет ерунда!")])]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- res/anim/fade_out_reverse.xml --\x3e")]),t._v("\n"),n("span",{attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="utf-8"?>')]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("set")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("android")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://schemas.android.com/apk/res/android"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v('\x3c!--\n      * interpolator - это временное поведение анимации, подробнее в разделе "Анимация"\n      * propertyName - указывает на свойство которое мы меняем\n      * valueType - типы который будет использоваться (если floatType - float, и т.д.)\n      * valueFrom & valueTo - от какого значение к какому\n      * duration - длительность анимации. Здесь число вынесен отдельно, чтобы из одного место было удобно менять длительность анимации\n    --\x3e')]),t._v("\n\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("objectAnimator")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("android")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://schemas.android.com/apk/res/android"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("interpolator")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@android:anim/accelerate_decelerate_interpolator"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("propertyName")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("alpha"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueType")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("floatType"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueFrom")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0.1"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueTo")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1.0"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("duration")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@integer/animation_duration"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("set")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- res/anim/fade_in_reverse.xml --\x3e")]),t._v("\n"),n("span",{attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="utf-8"?>')]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("set")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("android")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://schemas.android.com/apk/res/android"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("ordering")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("together"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v('\x3c!--\n      <set> - этот тег обозначеает что можно применить сразу несколько эффектов.\n\n      Здесь 2 эффекта - сдвиг по горизнотали(x) и алфьа(прозрачность)  \n\n      android:ordering="together" - эффекты могут применяться как сразу, так и последовательно - "sequntially"\n    --\x3e')]),t._v("\n\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("objectAnimator")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("android")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://schemas.android.com/apk/res/android"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("interpolator")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@android:anim/accelerate_decelerate_interpolator"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("propertyName")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("alpha"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueType")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("floatType"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueFrom")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1.0"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueTo")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0.0"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("duration")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@integer/animation_duration"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("objectAnimator")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("android")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://schemas.android.com/apk/res/android"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("interpolator")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@android:anim/accelerate_decelerate_interpolator"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("propertyName")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueType")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("floatType"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueFrom")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("valueTo")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("200"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),n("span",{attrs:{class:"token attr-name"}},[n("span",{attrs:{class:"token namespace"}},[t._v("android:")]),t._v("duration")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@integer/animation_duration"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("set")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("h3",{attrs:{id:"работа-с-addtobackstack"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#работа-с-addtobackstack","aria-hidden":"true"}},[t._v("#")]),t._v(" Работа с "),n("code",[t._v("addToBackStack()")])]),t._v(" "),n("p",[n("strong",[t._v("BackStack")]),t._v(" - нужен для сохранения транзакций с фрагментами, то есть, можно откатить всю предыдущую транзакцию. Тем самым написав меньше кода на возвращение. Это полезно использовать когда есть фрагменты которые мы не хотим удалять из контейнера, а просто прячем их. Но это не обеспечивает без тормозные переходы на фрагменты, так как они якобы прирендеренные.")]),t._v(" "),n("p",[t._v("Переход с Фрагмента(добавленный) на Фрагмент(добавленный). И обратно")]),t._v(" "),n("div",{staticClass:"language-Kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// Начинаем транзакцию")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" transaction "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("beginTransaction")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// устанавливаем анимацию в начале, это важно!")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 2 анимации на переход туда, и 2 - на переход откат транзакции(popBackStack)")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animEnter    "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("enter_from_right\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animExit     "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit_to_left\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animEnterPop "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("enter_from_left\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animExitPop  "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit_to_right\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("setCustomAnimations")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animEnter"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animExit"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animEnterPop"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animExitPop"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// находим первый фрагмент и прячем")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" currentFragment "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("findFragmentByTag")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentFragmentTag"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("hide")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentFragment"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// находим новый фрагмент и показываем")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" newFragment "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("findFragmentByTag")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newFragmentTag"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("show")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newFragment"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v('// добавляем(запоминаем) транзакцию, чтобы спокойно откатиться с помощью "fm.popBackStack()"')]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("addToBackStack")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("commit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("br"),t._v(" "),n("p",[t._v("Переход с Фрагмента(добавленный) на Фрагмент(не добавленный). И обратно")]),t._v(" "),n("div",{staticClass:"language-Kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" transaction "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("beginTransaction")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v('// анимация - для обычного перехода и перехода когда делают "popBackStack"')]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animEnter    "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("enter_from_right\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animExit     "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit_to_left\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animEnterPop "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("enter_from_left\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" animExitPop  "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit_to_right\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("setCustomAnimations")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animEnter"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animExit"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animEnterPop"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animExitPop"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// находим первый фрагмент и прячем")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" currentFragment "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("findFragmentByTag")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentFragmentTag"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("hide")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentFragment"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// новый фрагмент и показываем")]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("add")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frameContainer"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newFragment"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v('// добавляем(запоминаем) транзакцию, чтобы спокойно откатиться с помощью "fm.popBackStack()"')]),t._v("\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("addToBackStack")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntransaction"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("commit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("И если нам захочеться вернуться на домашний экран, просто делаем откат")]),t._v(" "),n("div",{staticClass:"language-Kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fragmentManager"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("popBackStack")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}],!1,null,null,null);o.options.__file="fragment-transactions.md";a.default=o.exports}}]);